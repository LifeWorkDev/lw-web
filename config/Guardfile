require "guard/rspec/dsl"
dsl = Guard::RSpec::Dsl.new(self)

directories %w[app config db lib spec]

guard :shell, first_match: true do
  # Restart puma
  watch(%r{config/((.ruby-version|Gemfile.lock)|(application|environment|puma)\.rb|(credentials.+\.enc)|(environments/development.rb|initializers/.+\.rb))|app/admin/fields/.+\.rb}) do |m|
    n "#{m[0]} changed", "Restarting server/worker..."
    # Copied from https://github.com/rails/rails/blob/master/railties/lib/rails/tasks/restart.rake
    FileUtils.mkdir_p "tmp"
    FileUtils.touch "tmp/restart.txt"
    `bin/invoker restart lifework-jobs`
    nil
  end

  # Run yarn
  watch("config/package.json") do
    `bin/yarn`
  end

  # Run bundler
  watch("config/Gemfile") do
    ::Bundler.with_unbundled_env do
      `bin/bundle --without production | awk '!/^(Using|Fetching)/'`
    end
  end
end

guard :rubocop, all_on_start: true, cli: %w[--autocorrect-all --display-cop-names --config=config/rubocop_standard.yml], executable: "bin/rubocop-daemon-wrapper" do
  watch(/.+\.(rb|rake)$/)
  watch("config/Gemfile")
  watch(%r{(?:.+/)?\.?rubocop(?:_(\w+))?\.yml$}) { "." }
end

guard :rspec, cmd: "bin/rspec" do
  # RSpec files
  rspec = dsl.rspec
  watch(rspec.spec_files)

  # Ruby files
  ruby = dsl.ruby
  dsl.watch_spec_files_for(ruby.lib_files)

  # Rails files
  rails = dsl.rails(view_extensions: %w[erb haml slim])
  dsl.watch_spec_files_for(rails.app_files)
  dsl.watch_spec_files_for(rails.views)

  watch(rails.controllers) do |m|
    [
      rspec.spec.call("routing/#{m[1]}_routing"),
      rspec.spec.call("requests/#{m[1]}_controller"),
      rspec.spec.call("acceptance/#{m[1]}"),
    ]
  end

  # Rails config changes
  watch(rails.routes) { "#{rspec.spec_dir}/routing" }
  watch(rails.app_controller) { "#{rspec.spec_dir}/requests" }

  # Fabricators
  watch(%r{^spec/fabricators/(.+)_fabricator\.rb$}) { |m| "spec/models/#{m[1]}_spec.rb" }

  # Concerns
  watch(%r{^app/models/concerns/(.+)/.+\.rb$}) { |m| "spec/models/#{m[1].singularize}_spec.rb" }

  # STI Subclasses
  watch(%r{^app/models/(.+)/.+\.rb$}) { |m| "spec/models/#{m[1].singularize}_spec.rb" }
  watch(%r{^app/models/(.+)\.rb$}) { |m| "spec/models/#{m[1].pluralize}" }

  # Project subclasses
  watch(%r{^app/models/project.rb$}) { Dir["spec/models/*_project_spec.rb"] }
end

guard :slimlint do
  watch(%r{app/views/.*\.slim$})
  watch(%r{config/slim-lint\.yml$}) { "app/views" }
end
