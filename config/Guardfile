require 'active_support/core_ext/string'

require 'guard/rspec/dsl'
dsl = Guard::RSpec::Dsl.new(self)

directories %w[app config db lib spec]

guard :shell, first_match: true do
  # Restart puma
  watch(%r{config/((.ruby-version|Gemfile.lock)|(application|environment|puma)\.rb|(environments/development.rb|initializers/.+\.rb))}) do |m|
    n "#{m[0]} changed", 'Restarting server...'
    # Copied from https://github.com/rails/rails/blob/master/railties/lib/rails/tasks/restart.rake
    FileUtils.mkdir_p 'tmp'
    FileUtils.touch 'tmp/restart.txt'
    nil
  end

  # Run yarn
  watch('config/package.json') do
    `bin/yarn`
  end

  # Run bundler
  watch('config/Gemfile') do
    ::Bundler.with_clean_env do
      `bin/bundle --without production`
    end
  end

  # Trigger webpack-dev-server refresh when views change
  watch(%r{(config/locales/.+)|#{dsl.rails(view_extensions: %w[erb haml slim]).views}}) do |m|
    p "#{m[0]} has changed. Reloading."
    # Trick Webpack into reloading browser
    `touch app/javascript/packs/application.js`
  end
end

guard :rubocop, all_on_start: true, cli: %w[--auto-correct --display-cop-names] do
  watch(/.+\.(rb|rake)$/)
  watch('config/Gemfile')
  watch(%r{(?:.+/)?\.?rubocop(?:_todo)?\.yml$}) { '.' }
end

guard :rspec, cmd: 'bin/rspec' do
  # RSpec files
  rspec = dsl.rspec
  watch(rspec.spec_files)

  # Ruby files
  ruby = dsl.ruby
  dsl.watch_spec_files_for(ruby.lib_files)

  # Rails files
  rails = dsl.rails(view_extensions: %w[erb haml slim])
  dsl.watch_spec_files_for(rails.app_files)
  dsl.watch_spec_files_for(rails.views)

  watch(rails.controllers) do |m|
    [
      rspec.spec.call("routing/#{m[1]}_routing"),
      rspec.spec.call("requests/#{m[1]}_controller"),
      rspec.spec.call("acceptance/#{m[1]}"),
    ]
  end

  # Rails config changes
  watch(rails.routes)          { "#{rspec.spec_dir}/routing" }
  watch(rails.app_controller)  { "#{rspec.spec_dir}/requests" }

  # Capybara features specs
  watch(rails.view_dirs)     { |m| rspec.spec.call("features/#{m[1]}") }
  watch(rails.layouts)       { |m| rspec.spec.call("features/#{m[1]}") }

  # Rails system specs
  watch(rails.view_dirs)     { |m| rspec.spec.call("system/#{m[1]}") }
  watch(rails.layouts)       { |m| rspec.spec.call("system/#{m[1]}") }

  # Fabricators
  watch(%r{^spec/fabricators/(.+)_fabricator\.rb$}) { |m| "spec/models/#{m[1]}_spec.rb" }

  # Concerns
  watch(%r{^app/models/concerns/(.+)/.+\.rb$}) { |m| "spec/models/#{m[1].singularize}_spec.rb" }

  # Subclasses
  watch(%r{^app/models/(.+)/.+\.rb$}) { |m| "spec/models/#{m[1].singularize}_spec.rb" }
end

guard :slimlint do
  watch(%r{app/views/.*\.slim$})
  watch(%r{config/slim-lint\.yml$}) { 'app/views' }
end
